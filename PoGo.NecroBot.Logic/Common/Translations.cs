#region using directives

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using PoGo.NecroBot.Logic.Interfaces.Configuration;
using PoGo.NecroBot.Logic.Logging;
using PoGo.NecroBot.Logic.Utils;
using POGOProtos.Enums;

#endregion

namespace PoGo.NecroBot.Logic.Common
{
    public interface ITranslation
    {
        string GetTranslation(TranslationString translationString, params object[] data);

        string GetTranslation(TranslationString translationString);

        string GetPokemonTranslation(PokemonId id);

        string GetPokemonMovesetTranslation(PokemonMove move);
    }

    public enum TranslationString
    {
        Pokeball,
        GreatPokeball,
        UltraPokeball,
        MasterPokeball,
        LogLevelDebug,
        LogLevelPokestop,
        WrongAuthType,
        LoginInvalid,
        FarmPokestopsOutsideRadius,
        FarmPokestopsNoUsableFound,
        EventFortUsed,
        EventFortFailed,
        Gym,
        Pokestop,
        EventFortTargeted,
        EventProfileLogin,
        EventUsedLuckyEgg,
        EventPokemonEvolvedSuccess,
        EventPokemonEvolvedFailed,
        EventPokemonTransferred,
        EventItemRecycled,
        EventPokemonCaptureSuccess,
        EventPokemonCaptureFailed,
        EventNoPokeballs,
        WaitingForMorePokemonToEvolve,
        UseLuckyEggsMinPokemonAmountTooHigh,
        CatchMorePokemonToUseLuckyEgg,
        EventUseBerry,
        ItemRazzBerry,
        CatchStatusAttempt,
        CatchStatus,
        Candies,
        UnhandledGpxData,
        DisplayHighestsHeader,
        CommonWordPerfect,
        CommonWordName,
        DisplayHighestsCpHeader,
        DisplayHighestsPerfectHeader,
        WelcomeWarning,
        IncubatorPuttingEgg,
        IncubatorStatusUpdate,
        DisplayHighestsLevelHeader,
        LogEntryError,
        LogEntryAttention,
        LogEntryInfo,
        LogEntryPokestop,
        LogEntryFarming,
        LogEntrySniper,
        LogEntryRecycling,
        LogEntryPkmn,
        LogEntryTransfered,
        LogEntryEvolved,
        LogEntryBerry,
        LogEntryEgg,
        LogEntryDebug,
        LogEntryUpdate,
        LogEntryNew,
        LogEntrySoftBan,
        LogEntryGym,
        LogEntryService,
        LoggingIn,
        PtcOffline,
        AccessTokenExpired,
        InvalidResponse,
        TryingAgainIn,
        AccountNotVerified,
        CommonWordUnknown,
        OpeningGoogleDevicePage,
        CouldntCopyToClipboard,
        CouldntCopyToClipboard2,
        RealisticTravelDetected,
        NotRealisticTravel,
        CoordinatesAreInvalid,
        GotUpToDateVersion,
        CheckForUpdatesDisabled,
        AutoUpdaterDisabled,
        DownloadingUpdate,
        FinishedDownloadingRelease,
        FinishedUnpackingFiles,
        FinishedTransferringConfig,
        UpdateFinished,
        LookingForIncensePokemon,
        PokemonSkipped,
        ZeroPokeballInv,
        CatchPokemonDisable,
        CurrentPokeballInv,
        CurrentPotionInv,
        CurrentReviveInv,
        CurrentMiscItemInv,
        MaxItemsCombinedOverMaxItemStorage,
        TotalRecyclePercentGreaterThan100,
        UsingRecyclePercentsInsteadOfTotals,
        PercentPokeballsToKeep,
        PercentPotionsToKeep,
        PercentRevivesToKeep,
        PercentBerriesToKeep,
        RecyclingQuietly,
        InvFullTransferring,
        InvFullTransferManually,
        InvFullPokestopLooting,
        IncubatorEggHatched,
        EncounterProblem,
        EncounterProblemLurePokemon,
        LookingForPokemon,
        LookingForLurePokemon,
        DesiredDestTooFar,
        PokemonRename,
        PokemonFavorite,
        PokemonUnFavorite,
        PokemonIgnoreFilter,
        CatchStatusError,
        CatchStatusEscape,
        CatchStatusFlee,
        CatchStatusMissed,
        CatchStatusSuccess,
        CatchTypeNormal,
        CatchTypeLure,
        CatchTypeIncense,
        WebSocketFailStart,
        StatsTemplateString,
        ProfileStatsTemplateString,
        ShowPokeTemplate,
        ShowPokeSkillTemplate,
        StatsXpTemplateString,
        RequireInputText,
        GoogleTwoFactorAuth,
        GoogleTwoFactorAuthExplanation,
        GoogleError,
        GoogleOffline,
        MissingCredentialsGoogle,
        MissingCredentialsPtc,
        SnipeScan,
        SnipeScanEx,
        NoPokemonToSnipe,
        NotEnoughPokeballsToSnipe,
        DisplayHighestMove1Header,
        DisplayHighestMove2Header,
        DisplayHighestCandy,
        IPBannedError,
        NoEggsAvailable,
        UseLuckyEggActive,
        UsedLuckyEgg,
        UseLuckyEggAmount,
        NoIncenseAvailable,
        UseIncenseActive,
        UseIncenseAmount,
        UsedIncense,
        AmountPkmSeenCaught,
        PkmPotentialEvolveCount,
        PkmNotEnoughRessources,
        EventUsedIncense,
        SnipeServerOffline,
        PromptError,
        PromptErrorDouble,
        PromptErrorInteger,
        PromptErrorString,
        SoftBanBypassed,
        FirstStartLanguagePrompt,
        FirstStartLanguageCodePrompt,
        FirstStartLanguageConfirm,
        FirstStartSetupTelegramPrompt,
        FirstStartSetupTelegramCodePrompt,
        FirstStartSetupTelegramCodeConfirm,
        FirstStartSetupTelegramPasswordPrompt,
        FirstStartSetupTelegramPasswordConfirm,
        FirstStartPrompt,
        FirstStartAutoGenSettings,
        FirstStartSetupAccount,
        FirstStartSetupTypePrompt,
        FirstStartSetupTypeConfirm,
        FirstStartSetupTypePromptError,
        FirstStartSetupUsernamePrompt,
        FirstStartSetupUsernameConfirm,
        FirstStartSetupPasswordPrompt,
        FirstStartSetupPasswordConfirm,
        FirstStartAccountCompleted,
        FirstStartDefaultLocationPrompt,
        FirstStartDefaultLocationSet,
        FirstStartDefaultLocation,
        FirstStartSetupDefaultLocationError,
        FirstStartSetupDefaultLatLongPrompt,
        FirstStartSetupDefaultLatLongConfirm,
        FirstStartSetupCompleted,
        PokedexCatchedTelegram,
        PokedexPokemonCatchedTelegram,
        PokedexNeededTelegram,
        PokedexPokemonNeededTelegram,
        LoggedInTelegram,
        LoginFailedTelegram,
        NotLoggedInTelegram,
        Unproxied,
        Proxied,
        FixProxySettings,
        UsageHelp,
        LoginRemainingTime,
        HighestsPokemoHeader,
        HighestsPokemoCell,
        HumanWalkingVariant,
        AccountBanned,
        GoogleAPIWarning,
        Only10kmEggs,
        SniperCount,
        SnipeExceeds,
        CatchExceeds,
        PokeStopExceeds,
        CatchLimitReached,
        CatchTimerReached,
        PokestopLimitReached,
        PokestopTimerReached,
        ExitDueToLimitsReached,
        HumanWalkSnipe,
        HumanWalkSnipeUpdate,
        HumanWalkSnipeAddedPokestop,
        HumanWalkSnipeDestinationReached,
        HumanWalkSnipeNotEnoughtBalls,
        HumanWalkSnipePokemonEncountered,
        EventPokemonUpgraded,
        FirstStartSetupProxyPrompt,
        FirstStartSetupProxyHostPrompt,
        FirstStartSetupProxyHostConfirm,
        FirstStartSetupProxyPortConfirm,
        FirstStartSetupProxyPortPrompt,
        FirstStartSetupProxyAuthPrompt,
        FirstStartSetupProxyUsernamePrompt,
        FirstStartSetupProxyUsernameConfirm,
        FirstStartSetupProxyPasswordPrompt,
        FirstStartSetupProxyPasswordConfirm,
        FirstStartSetupAutoCompleteTutPrompt,
        FirstStartSetupAutoCompleteTutNicknamePrompt,
        FirstStartSetupAutoCompleteTutNicknameConfirm,
        FirstStartSetupAutoCompleteTutGenderPrompt,
        FirstStartSetupAutoCompleteTutGenderConfirm,
        FirstStartSetupAutoCompleteTutStarterPrompt,
        FirstStartSetupAutoCompleteTutStarterConfirm,
        FirstStartSetupWebSocketPrompt,
        FirstStartSetupWebSocketPortPrompt,
        FirstStartSetupWebSocketPortConfirm,
        FirstStartSetupWalkingSpeedPrompt,
        FirstStartSetupWalkingSpeedKmHPrompt,
        FirstStartSetupWalkingSpeedKmHConfirm,
        FirstStartSetupUseWalkingSpeedVariantPrompt,
        FirstStartSetupWalkingSpeedVariantPrompt,
        FirstStartSetupWalkingSpeedVariantConfirm,
        MinimumClientVersionException,
        ExitNowAfterEnterKey,
        CaptchaShown,
        FailedSendNotification,
        TelegramBotStarted,
        TelegramNeedChatId,
        BulkTransferFailed,
        AutoSnipeDisabled,
        SnipePokemonNotInPokedex,
        BuddyPokemonUpdate,
        TargetLocationSet,
        WebSocketStarted,
        TelegramCommandAccountsDescription,
        TelegramCommandAllDescription,
        TelegramCommandExitDescription,
        TelegramCommandHelpDescription,
        TelegramCommandItemsDescription,
        TelegramCommandLogsDescription,
        TelegramCommandPokedexDescription,
        TelegramCommandProfileDescription,
        TelegramCommandRecycleDescription,
        TelegramCommandRestartDescription,
        TelegramCommandSnipeDescription,
        TelegramCommandStatusDescription,
        TelegramCommandTopDescription,
        TelegramCommandLocDescription,
        TelegramCommandAccountsMsgHead,
        TelegramCommandAllMsgHead,
        TelegramCommandExitMsgHead,
        TelegramCommandHelpMsgHead,
        TelegramCommandItemsMsgHead,
        TelegramCommandLogsMsgHead,
        TelegramCommandPokedexMsgHead,
        TelegramCommandProfileMsgHead,
        TelegramCommandRecycleMsgHead,
        TelegramCommandRestartMsgHead,
        TelegramCommandSnipeMsgHead,
        TelegramCommandStatusMsgHead,
        TelegramCommandTopMsgHead,
        TelegramCommandLocMsgHead,
        TelegramCommandProfileMsgBody,
        TelegramCommandStatusMsgBody,
        MultiAccountAutoSelect
    }

    public class Translation : ITranslation
    {
        [JsonProperty("TranslationStrings",
             ItemTypeNameHandling = TypeNameHandling.Arrays,
             ItemConverterType = typeof(KeyValuePairConverter),
             ObjectCreationHandling = ObjectCreationHandling.Replace,
             DefaultValueHandling = DefaultValueHandling.Populate)]
        //Default Translations (ENGLISH)        
        private readonly List<KeyValuePair<TranslationString, string>> _translationStrings = new List
            <KeyValuePair<TranslationString, string>>
            {
                new KeyValuePair<TranslationString, string>(TranslationString.MultiAccountAutoSelect, "PLEASE SELECT AN ACCOUNT TO START. AUTO START AFTER {0} SECOND"),
                new KeyValuePair<TranslationString, string>(TranslationString.WebSocketStarted, "Websocket listening on at  wss://localhost:{0} or ws://localhost:{1} "),
                new KeyValuePair<TranslationString, string>(TranslationString.TargetLocationSet,
                    "Target location [{0},{1}] has been accepted. Bot will go there soon."),
                new KeyValuePair<TranslationString, string>(TranslationString.Pokeball, "PokeBall"),
                new KeyValuePair<TranslationString, string>(TranslationString.GreatPokeball, "GreatBall"),
                new KeyValuePair<TranslationString, string>(TranslationString.UltraPokeball, "UltraBall"),
                new KeyValuePair<TranslationString, string>(TranslationString.MasterPokeball, "MasterBall"),
                new KeyValuePair<TranslationString, string>(TranslationString.WrongAuthType,
                    "Unknown AuthType in config.json"),
                new KeyValuePair<TranslationString, string>(TranslationString.LoginInvalid,
                    "User credentials are invalid and login failed."),
                new KeyValuePair<TranslationString, string>(TranslationString.FarmPokestopsOutsideRadius,
                    "You're outside of your defined radius! Walking to start ({0}m away) in 5 seconds. Is your LastPos.ini file correct?"),
                new KeyValuePair<TranslationString, string>(TranslationString.FarmPokestopsNoUsableFound,
                    "No usable PokeStops found in your area. Is your maximum distance too small?"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventFortUsed,
                    "Name: {0} XP: {1}, Gems: {2}, Items: {3}, Lat: {4}, Long: {5}, Alt: {6}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventFortFailed,
                    "Name: {0} INFO: Looting failed, possible softban. Unban in: {1}/{2}"),
                new KeyValuePair<TranslationString, string>(TranslationString.Gym, "Gym"),
                new KeyValuePair<TranslationString, string>(TranslationString.Pokestop, "Pokestop"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventFortTargeted,
                    "Traveling to {0}: {1} ({2} m) ({3} seconds) (route {4})"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventProfileLogin, "Playing as {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventUsedIncense,
                    "Used Incense, remaining: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventUsedLuckyEgg,
                    "Used Lucky Egg, remaining: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonEvolvedSuccess,
                    "{0} successfully for {1}xp"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonEvolvedFailed,
                    "Failed {0}. Result was {1}, stopping evolving {2}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonTransferred,
                    "{0}\t- CP: {1}  IV: {2}%   [Best CP: {3}  IV: {4}%] (Candies: {5})"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonUpgraded,
                    "{0}\t- CP: {1}  IV: {2}%   [Best CP: {3}  IV: {4}%]"),

                new KeyValuePair<TranslationString, string>(TranslationString.EventItemRecycled, "{0}x {1}"),

                //Logging Cleanup (mostly uneccessary information, may want a verbose pokemon capture logger setting)
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonCaptureSuccess,
                    "({0}) | ({1}) {2} Lvl: {3} CP: ({4}/{5}) IV: {6}% | Chance: {7}% | {8}m dist | with a {9} ({10} left). | {11} EXP earned | {12} | lat: {13} long: {14} | Move1: {15} Move2: {16} | Rarity :{17}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonCaptureFailed,
                    "({0}) | ({1}) {2} Lvl: {3} CP: ({4}/{5}) IV: {6}% | Chance: {7}% | {8}m dist | with a {9} ({10} left). | lat: {11} long: {12} | Move1: {13} Move2: {14} | Rarity :{15}"),


                new KeyValuePair<TranslationString, string>(TranslationString.EventNoPokeballs,
                    "No Pokeballs - We missed a {0} with CP {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.WaitingForMorePokemonToEvolve,
                    "Waiting to evolve {0} Pokemon once {1} more are caught! ({2}/{3} for {4}% inventory)"),
                new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggsMinPokemonAmountTooHigh,
                    "Lucky eggs will never be used with UseLuckyEggsMinPokemonAmount set to {0}, use <= {1} instead"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchMorePokemonToUseLuckyEgg,
                    "Catch {0} more Pokemon to use a Lucky Egg!"),
                new KeyValuePair<TranslationString, string>(TranslationString.EventUseBerry,
                    "Used {0} | {1} remaining"),
                new KeyValuePair<TranslationString, string>(TranslationString.ItemRazzBerry, "Razz Berry"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusAttempt, "{0} Attempt #{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatus, "{0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.Candies, "Candies: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.UnhandledGpxData,
                    "Unhandled data in GPX file, attempting to skip."),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsHeader, "Pokemons"),
                new KeyValuePair<TranslationString, string>(TranslationString.CommonWordPerfect, "perfect"),
                new KeyValuePair<TranslationString, string>(TranslationString.CommonWordName, "name"),
                new KeyValuePair<TranslationString, string>(TranslationString.CommonWordUnknown, "Unknown"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsCpHeader,
                    "DisplayHighestsCP"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsPerfectHeader,
                    "DisplayHighestsPerfect"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsLevelHeader,
                    "DisplayHighestsLevel"),
                new KeyValuePair<TranslationString, string>(TranslationString.WelcomeWarning,
                    "Make sure Lat & Lng are right. Exit Program if not! Lat: {0} Lng: {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.IncubatorPuttingEgg,
                    "Putting egg in incubator: {0:0.00}km left"),
                new KeyValuePair<TranslationString, string>(TranslationString.IncubatorStatusUpdate,
                    "Incubator status update: {0:0.00}km left"),
                new KeyValuePair<TranslationString, string>(TranslationString.IncubatorEggHatched,
                    "Incubated egg has hatched: {0} | Lvl: {1} CP: ({2}/{3}) IV: {4}%"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryError, "ERROR"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryAttention, "ATTENTION"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryInfo, "INFO"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryPokestop, "POKESTOP"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryFarming, "FARMING"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntrySniper, "SNIPER"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryRecycling, "RECYCLING"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryPkmn, "PKMN"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryTransfered, "TRANSFERRED"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryEvolved, "EVOLVED"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryBerry, "BERRY"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryEgg, "EGG"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryDebug, "DEBUG"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryUpdate, "UPDATE"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryNew, "NEW"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryGym, "GYM"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntryService, "SERVICE"),
                new KeyValuePair<TranslationString, string>(TranslationString.LogEntrySoftBan, "SOFTBAN"),
                new KeyValuePair<TranslationString, string>(TranslationString.LoggingIn, "Logging in using {0} {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PtcOffline,
                    "PTC Servers are probably down OR your credentials are wrong."),
                new KeyValuePair<TranslationString, string>(TranslationString.AccessTokenExpired,
                    "PTC Login Token expired. Relogging..."),
                new KeyValuePair<TranslationString, string>(TranslationString.InvalidResponse,
                    "Received an invalid response from Niantic server"),
                new KeyValuePair<TranslationString, string>(TranslationString.TryingAgainIn,
                    "Trying again in {0} seconds..."),
                new KeyValuePair<TranslationString, string>(TranslationString.AccountNotVerified,
                    "Account not verified! Exiting..."),
                new KeyValuePair<TranslationString, string>(TranslationString.OpeningGoogleDevicePage,
                    "Opening Google Device page. Please paste the code using CTRL+V"),
                new KeyValuePair<TranslationString, string>(TranslationString.CouldntCopyToClipboard,
                    "Couldnt copy to clipboard, do it manually"),
                new KeyValuePair<TranslationString, string>(TranslationString.CouldntCopyToClipboard2,
                    "Goto: {0} & enter {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.RealisticTravelDetected,
                    "Detected realistic Traveling , using Default Settings inside config.json"),
                new KeyValuePair<TranslationString, string>(TranslationString.NotRealisticTravel,
                    "Not realistic Traveling at {0}, using last saved LastPos.ini"),
                new KeyValuePair<TranslationString, string>(TranslationString.CoordinatesAreInvalid,
                    "Coordinates in \"LastPos.ini\" file are invalid, using the default coordinates"),
                new KeyValuePair<TranslationString, string>(TranslationString.GotUpToDateVersion,
                    "Perfect! You already have the newest Version {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.CheckForUpdatesDisabled,
                    "Update checking is disabled. Current Version: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.AutoUpdaterDisabled,
                    "AutoUpdater is disabled. Get the latest release from: {0}\n "),
                new KeyValuePair<TranslationString, string>(TranslationString.DownloadingUpdate,
                    "Downloading and apply Update..."),
                new KeyValuePair<TranslationString, string>(TranslationString.FinishedDownloadingRelease,
                    "Finished downloading newest Release..."),
                new KeyValuePair<TranslationString, string>(TranslationString.FinishedUnpackingFiles,
                    "Finished unpacking files..."),

                new KeyValuePair<TranslationString, string>(TranslationString.FinishedTransferringConfig,
                    "Finished transferring your config to the new version..."),
                new KeyValuePair<TranslationString, string>(TranslationString.UpdateFinished,
                    "Update finished, you can close this window now."),
                new KeyValuePair<TranslationString, string>(TranslationString.LookingForIncensePokemon,
                    "Looking for incense Pokemon..."),
                new KeyValuePair<TranslationString, string>(TranslationString.LookingForPokemon,
                    "Looking for Pokemon..."),
                new KeyValuePair<TranslationString, string>(TranslationString.LookingForLurePokemon,
                    "Looking for lure Pokemon..."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokemonSkipped, "Skipped {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.ZeroPokeballInv,
                    "Out of Pokeballs. Waiting {0} minute(s) until catching again."),
                new KeyValuePair<TranslationString, string>(TranslationString.CurrentPokeballInv,
                    "Pokeballs: {0} | Greatballs: {1} | Ultraballs: {2} | Masterballs: {3}"),
                new KeyValuePair<TranslationString, string>(TranslationString.CurrentPotionInv,
                    "Potions: {0} | SuperPotions: {1} | HyperPotions: {2} | MaxPotions: {3}"),
                new KeyValuePair<TranslationString, string>(TranslationString.CurrentReviveInv,
                    "Revives: {0} | MaxRevives: {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.CurrentMiscItemInv,
                    "Berries: {0} | Incense: {1} | LuckyEggs: {2} | Lures: {3}"),
                new KeyValuePair<TranslationString, string>(TranslationString.MaxItemsCombinedOverMaxItemStorage,
                    "[Configuration Invalid] Your maximum items combined (Balls+Potions+Revives+Berries={0}) is over your max item storage ({1})"),
                new KeyValuePair<TranslationString, string>(TranslationString.TotalRecyclePercentGreaterThan100,
                    "[Configuration Invalid] Your total recycle percents combined (Balls+Potions+Revives+Berries) is greater than 100. It must be less than or equal to 100."),
                new KeyValuePair<TranslationString, string>(TranslationString.UsingRecyclePercentsInsteadOfTotals,
                    "[Recycle Configuration] Using recycle percents. Max Items: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PercentPokeballsToKeep,
                    "[Recycle Configuration] Pokeballs ({0}%): {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PercentPotionsToKeep,
                    "[Recycle Configuration] Potions   ({0}%): {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PercentRevivesToKeep,
                    "[Recycle Configuration] Revives   ({0}%): {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PercentBerriesToKeep,
                    "[Recycle Configuration] Berries   ({0}%): {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.RecyclingQuietly, "Recycling Quietly..."),
                new KeyValuePair<TranslationString, string>(TranslationString.InvFullTransferring,
                    "Pokemon Inventory is full, transferring Pokemon..."),
                new KeyValuePair<TranslationString, string>(TranslationString.BulkTransferFailed,
                    "Bulk transfer {0} pokemons was failed..."),

                new KeyValuePair<TranslationString, string>(TranslationString.InvFullTransferManually,
                    "Pokemon Inventory is full! Please transfer Pokemon manually or set TransferDuplicatePokemon to true in settings..."),
                new KeyValuePair<TranslationString, string>(TranslationString.InvFullPokestopLooting,
                    "Inventory is full, no items looted!"),
                new KeyValuePair<TranslationString, string>(TranslationString.EncounterProblem,
                    "Encounter problem: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.EncounterProblemLurePokemon,
                    "Encounter problem: Lure Pokemon {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.DesiredDestTooFar,
                    "Your desired destination of {0}, {1} is too far from your current position of {2}, {3}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokemonRename,
                    "Pokemon {0} ({1}) renamed from {2} to {3}."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokemonFavorite,
                    "{0}% perfect {1} (CP {2}) *Favorited*."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokemonUnFavorite,
                    "{0}% perfect {1} (CP {2}) *Un-Favorited*."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokemonIgnoreFilter,
                    "[Pokemon ignore filter] - Ignoring {0} as defined in settings"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusAttempt, "CatchAttempt"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusError, "CatchError"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusEscape, "CatchEscape"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusFlee, "CatchFlee"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusMissed, "CatchMissed"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusSuccess, "CatchSuccess"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeNormal, "Normal"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeLure, "Lure"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeIncense, "Incense"),
                new KeyValuePair<TranslationString, string>(TranslationString.WebSocketFailStart,
                    "Failed to start WebSocketServer on port : {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.StatsTemplateString,
                    "{0} - Runtime {1} - Lvl: {2} | EXP/H: {3:n0} | P/H: {4:n0} | Stardust: {5:n0} | Transferred: {6:n0} | Recycled: {7:n0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.ProfileStatsTemplateString,
                    "----- LVL {0} | {1} ----- \n Experience: {2}/{3} \n Pokemons caught: {4} \n Pokemons deployed: {5} \n Pokestops visited: {6} \n Eggs hatched: {7} \n Pokemons evolved: {8} \n Pokedex entries: {9} \n KM walked: {10}  \n Pokemons: {11}/{12}"),
                new KeyValuePair<TranslationString, string>(TranslationString.ShowPokeTemplate,
                    "\n CP: {0} | IV: {1}% | Name: {2}"),
                new KeyValuePair<TranslationString, string>(TranslationString.ShowPokeSkillTemplate,
                    "\n CP: {0} | IV: {1}% | Move: {2} + {3} | Name: {4}"),
                new KeyValuePair<TranslationString, string>(TranslationString.StatsXpTemplateString,
                    "{0} (Advance in {1}h {2}m | {3:n0}/{4:n0} XP)"),
                new KeyValuePair<TranslationString, string>(TranslationString.RequireInputText,
                    "Program will continue after the key press..."),
                new KeyValuePair<TranslationString, string>(TranslationString.GoogleTwoFactorAuth,
                    "As you have Google Two Factor Auth enabled, you will need to insert an App Specific Password into the auth.json"),
                new KeyValuePair<TranslationString, string>(TranslationString.GoogleTwoFactorAuthExplanation,
                    "Opening Google App-Passwords. Please make a new App Password (use Other as Device)"),
                new KeyValuePair<TranslationString, string>(TranslationString.GoogleError,
                    "Make sure you have entered the right Email & Password."),
                new KeyValuePair<TranslationString, string>(TranslationString.GoogleOffline,
                    "Google servers are probably down, Please be patient and start the bot later."),
                new KeyValuePair<TranslationString, string>(TranslationString.MissingCredentialsGoogle,
                    "You need to fill out GoogleUsername and GooglePassword in auth.json!"),
                new KeyValuePair<TranslationString, string>(TranslationString.MissingCredentialsPtc,
                    "You need to fill out PtcUsername and PtcPassword in auth.json!"),
                new KeyValuePair<TranslationString, string>(TranslationString.SnipeScan,
                    "Scanning for Snipeable Pokemon at {0}..."),
                new KeyValuePair<TranslationString, string>(TranslationString.SnipePokemonNotInPokedex,
                    "Auto sniper detected a pokemon not in your pokedex:  {0}. He will be snipped as priority!"),
                new KeyValuePair<TranslationString, string>(TranslationString.SnipeScanEx,
                    "Sniping a {0} with {1} IV at {2}..."),
                new KeyValuePair<TranslationString, string>(TranslationString.NoPokemonToSnipe,
                    "Did not find a Pokemon within the Location, pokemon despawned?"),
                new KeyValuePair<TranslationString, string>(TranslationString.NotEnoughPokeballsToSnipe,
                    "Not enough Pokeballs to start sniping! ({0}/{1})"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestMove1Header, "MOVE1"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestMove2Header, "MOVE2"),
                new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestCandy, "Candy"),
                new KeyValuePair<TranslationString, string>(TranslationString.IPBannedError,
                    "Connection refused. Your IP might have been Blacklisted by Niantic. Exiting.."),
                new KeyValuePair<TranslationString, string>(TranslationString.NoEggsAvailable, "No Eggs Available"),
                new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggActive,
                    "Lucky Egg Already Active"),
                new KeyValuePair<TranslationString, string>(TranslationString.UsedLuckyEgg, "Used Lucky Egg"),
                new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggAmount,
                    "Lucky Eggs in Inventory: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.NoIncenseAvailable,
                    "No Incense Available"),
                new KeyValuePair<TranslationString, string>(TranslationString.UseIncenseActive,
                    "Incense Already Active"),
                new KeyValuePair<TranslationString, string>(TranslationString.UseIncenseAmount,
                    "Incense in Inventory: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.UsedIncense, "Used an Incense"),
                new KeyValuePair<TranslationString, string>(TranslationString.AmountPkmSeenCaught,
                    "Amount of Pokemon Seen: {0}/151, Amount of Pokemon Caught: {1}/151"),
                new KeyValuePair<TranslationString, string>(TranslationString.PkmPotentialEvolveCount,
                    "Potential Evolutions: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PkmNotEnoughRessources,
                    "Pokemon Upgrade Failed Not Enough Resources"),
                new KeyValuePair<TranslationString, string>(TranslationString.SnipeServerOffline,
                    "Sniping server is offline. Skipping..."),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartPrompt,
                    "This is your first start, would you like to begin setup? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguagePrompt,
                    "Would you like to change the default language? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguageCodePrompt,
                    "Please enter a new language code"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguageConfirm,
                    "Language Code Applied: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTelegramPrompt,
                    "Would you like to enable the Telegram Feature? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTelegramCodePrompt,
                    "Please enter your Telegram API Key (Right click to paste)"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTelegramCodeConfirm,
                    "Accepted Telegram API Key: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTelegramPasswordPrompt,
                    "Please enter your Telegram Password (DEFAULT: 12345)"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTelegramPasswordConfirm,
                    "Accepted Telegram Password: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyPrompt,
                    "Would you like to enable the Proxy Feature? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyHostPrompt,
                    "Please enter your Proxy Host"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyHostConfirm,
                    "Accepted Proxy Host: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyPortPrompt,
                    "Please enter your Proxy Port"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyPortConfirm,
                    "Accepted Proxy Port: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyAuthPrompt,
                    "Would you like to enable the Proxy Authentication? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyUsernamePrompt,
                    "Please enter your Proxy Username (Right click to paste)"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyUsernameConfirm,
                    "Accepted Proxy Username: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyPasswordPrompt,
                    "Please enter your Proxy Password (Right click to paste)"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupProxyPasswordConfirm,
                    "Accepted Proxy Password: {0}"),
                //new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAutoCompleteTutPrompt, "Would you like to enable the Auto-Complete Tutorial Feature? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(
                    TranslationString.FirstStartSetupAutoCompleteTutNicknamePrompt,
                    "Please enter your desired Nickname"),
                //new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAutoCompleteTutNicknameConfirm, "Accepted Nickname: {0}"),
                new KeyValuePair<TranslationString, string>(
                    TranslationString.FirstStartSetupAutoCompleteTutGenderPrompt,
                    "Please enter your desired Gender (ENGLISH WORD: Male or Female)"),
                //new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAutoCompleteTutGenderConfirm, "Accepted Gender: {0}"),
                new KeyValuePair<TranslationString, string>(
                    TranslationString.FirstStartSetupAutoCompleteTutStarterPrompt,
                    "Please enter your desired Starter (ENGLISH NAME: Bulbasaur, Charmander, Squirtle)"),
                //new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAutoCompleteTutStarterConfirm, "Accepted Starter: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWebSocketPrompt,
                    "Would you like to enable the WebSocket Feature? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWebSocketPortPrompt,
                    "Please enter your WebSocket Port (default 14251)"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWebSocketPortConfirm,
                    "Accepted Port: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWalkingSpeedPrompt,
                    "Would you like to edit the Walking Speed Settings? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWalkingSpeedKmHPrompt,
                    "Please enter your desired walking speed (km/h) Ex: 5.85 [MAX 20]"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWalkingSpeedKmHConfirm,
                    "Accepted Walking Speed: {0}"),
                new KeyValuePair<TranslationString, string>(
                    TranslationString.FirstStartSetupUseWalkingSpeedVariantPrompt,
                    "Would you like to enable the Walking Speed Variant Setting? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWalkingSpeedVariantPrompt,
                    "Please enter the walking speed variant (km/h) Ex: 1.2"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupWalkingSpeedVariantConfirm,
                    "Accepted Variant: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PromptError,
                    "[INPUT ERROR] Error with input, please enter '{0}' or '{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.PromptErrorDouble,
                    "[INPUT ERROR] Error with input, please enter a valid number"),
                new KeyValuePair<TranslationString, string>(TranslationString.PromptErrorInteger,
                    "[INPUT ERROR] Error with input, please enter a valid integer number"),
                new KeyValuePair<TranslationString, string>(TranslationString.PromptErrorString,
                    "[INPUT ERROR] Error with input, please enter one of the following options: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartAutoGenSettings,
                    "Config/Auth file automatically generated and must be completed before continuing"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAccount,
                    "### Setting up new USER ACCOUNT ###"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypePrompt,
                    "Please choose an account type: {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypeConfirm,
                    "Chosen Account Type: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypePromptError,
                    "[ERROR] submitted an incorrect account type, please choose '{0}' or '{1}'"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupUsernamePrompt,
                    "Please enter a Username"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupUsernameConfirm,
                    "Accepted username: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupPasswordPrompt,
                    "Please enter a Password"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupPasswordConfirm,
                    "Accepted password: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartAccountCompleted,
                    "### User Account Completed ###"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocationPrompt,
                    "Would you like to setup a new Default Location? {0}/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocationSet,
                    "Default Location Applied"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocation,
                    "### Setting Default Position ###"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLocationError,
                    "[ERROR] Please input a correct LatLong for example: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLatLongPrompt,
                    "Please enter a Latitude and Longitude (Right click to paste) - Format: Value, Value"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLatLongConfirm,
                    "Lattitude and Longitude accepted: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.SoftBanBypassed,
                    "Successfully bypassed!"),
                new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupCompleted,
                    "### COMPLETED CONFIG SETUP ###"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokedexCatchedTelegram,
                    "--- Pokedex catched --- \n"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokedexPokemonCatchedTelegram,
                    "#{0} Name: {1} | Catched: {2} | Encountered: {3} \n"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokedexNeededTelegram,
                    "--- Pokedex needed --- \n"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokedexPokemonNeededTelegram,
                    "#{0}# Name: {1} \n"),
                new KeyValuePair<TranslationString, string>(TranslationString.LoggedInTelegram,
                    "You have been logged in sucessfully. Session is valid for 5 Minutes"),
                new KeyValuePair<TranslationString, string>(TranslationString.LoginFailedTelegram,
                    "Wrong Password or wrong Syntax! Use /login PASSWORD"),
                new KeyValuePair<TranslationString, string>(TranslationString.NotLoggedInTelegram,
                    "You are not logged in, use /login PASSWORD"),
                new KeyValuePair<TranslationString, string>(TranslationString.Proxied,
                    "Your IP is: {0} | Proxy IP is: {1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.Unproxied, "Your IP is: {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.FixProxySettings,
                    "Press any key to exit so you can fix your proxy settings..."),
                new KeyValuePair<TranslationString, string>(TranslationString.UsageHelp,
                    "Invalid command arguments! \n Correct usage: \n {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.LoginRemainingTime,
                    "You are already logged in! \n Session valid for: ({0}:{1} seconds)"),
                new KeyValuePair<TranslationString, string>(TranslationString.HighestsPokemoHeader,
                    "====== {0} ======"),
                new KeyValuePair<TranslationString, string>(TranslationString.HighestsPokemoCell,
                    "# CP {0}/{1} | ({2}% {3})\t| Lvl {4}\t {5}: {6}\t {7}: {8} {9}: {10} {11}: {12}"),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkingVariant,
                    "Walking Speed: Has been changed, {0:n2} Km/h to {1:n2} Km/h"),
                new KeyValuePair<TranslationString, string>(TranslationString.AccountBanned, "Probably Permanent Ban!"),
                new KeyValuePair<TranslationString, string>(TranslationString.GoogleAPIWarning,
                    "Without a Google Api, you will have 2500 free quota limit, if you reach the maximum quota, try to change your IP. To configure \"GoogleAPIKey\", get API Key in link: https://developers.google.com/maps/documentation/directions/get-api-key"),
                new KeyValuePair<TranslationString, string>(TranslationString.Only10kmEggs,
                    "Player below level 20, saving this 10 km Egg for later"),
                new KeyValuePair<TranslationString, string>(TranslationString.AutoSnipeDisabled,
                    "Your are out of ball because snipe so fast, you can reduce snipe speed by update MinIVForAutoSnipe or SnipePokemonFilters, Auto snipe will be disable in {0} mins"),
                new KeyValuePair<TranslationString, string>(TranslationString.SniperCount, "Sniper count {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.SnipeExceeds,
                    "Sniper need to take a rest before your account is banned"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchExceeds,
                    "You are catching too fast. Your cannot catch another one until {0} seconds later"),
                new KeyValuePair<TranslationString, string>(TranslationString.PokeStopExceeds,
                    "You are visiting pokestops too fast. Your cannot visit another one until {0} seconds later"),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchLimitReached,
                    "You have reached your set maximum number of Pokemon catched per 24 Hours. Catching disabled until the limits expire."),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchTimerReached,
                    "You have reached your set maximum running time for Catching Pokemon per 24 Hours. Catching disabled until the limits expire."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokestopLimitReached,
                    "You have reached your set maximum number of Pokestops per 24 Hours. Looting of Pokestops disabled until the limits expire."),
                new KeyValuePair<TranslationString, string>(TranslationString.PokestopTimerReached,
                    "You have reached your set maximum running time to loot Pokestops per 24 Hours. Looting of Pokestops disabled until the limits expire."),
                new KeyValuePair<TranslationString, string>(TranslationString.ExitDueToLimitsReached,
                    "We have reached both the user defined max Pokestops/max duration and caught max Pokemons/max duration. Time to take a break. Exiting."),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipe,
                    "(HUMAN WALK) Found {0} spawning | lat: {1}, lng: {2}, dist {3:0.00}m , expired in {4:00} min {5:00} sec | Estimate : {6:00} min {7:00} sec | Allow spin: {8} | Allow catch : {9} | Speed {10:0.00}km/h"),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipeUpdate,
                    "(HUMAN WALK) Found {0} pokemon matched with you filters. Human walking sniper won't catch em all. but try to maximun catch if possible."),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipeAddedPokestop,
                    "(HUMAN WALK) You are {0:0.00m} away from nearest pokestop. Restart farming at this place with {1} pokestops."),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipeDestinationReached,
                    "(HUMAN WALK) destination reached | lat: {0}, lng: {1} | wait :{2:0.00} sec"),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipeNotEnoughtBalls,
                    "(HUMAN WALK) Not enough balls to activate catch Em-All mode. ({0})/{1}"),
                new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkSnipePokemonEncountered,
                    "(HUMAN WALK) Encountered {0}  | lat :{1} , Lng : {2} | removed from snipping list"),
                new KeyValuePair<TranslationString, string>(TranslationString.MinimumClientVersionException,
                    "(KILLSWITCH) We have detected a Pokemon API change. The bot emulates API version {0}, which is no longer supported.  Minimum API version is now {1}."),
                new KeyValuePair<TranslationString, string>(TranslationString.ExitNowAfterEnterKey,
                    "The bot will now exit after hitting the enter key."),
                new KeyValuePair<TranslationString, string>(TranslationString.CaptchaShown,
                    "Captcha is being shown and will need to be solved."),
                new KeyValuePair<TranslationString, string>(TranslationString.CatchPokemonDisable,
                    "Too few Pokeballs. Temporarily disabling the catching of wild Pokemon for {0} min or until we have {1} balls again."),
                new KeyValuePair<TranslationString, string>(TranslationString.FailedSendNotification,
                    "Notification sending failed."),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramBotStarted,
                    "Bot has been started"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramNeedChatId,
                    "To received notification from telgram, please initial a first message chat with bot."),
                new KeyValuePair<TranslationString, string>(TranslationString.BuddyPokemonUpdate,
                    "{0} now is your buddy!!!"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandAccountsDescription,
                    "Shows configured bot accounts"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandAllDescription,
                    "Shows your Pokemon"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandExitDescription,
                    "Exit Bot"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandHelpDescription,
                    "Shows this help"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandItemsDescription,
                    "Shows your iventory items"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandLogsDescription,
                    "Shows last 'n' log entries (defaults to {0})"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandPokedexDescription,
                    "Shows your Pokedex"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandProfileDescription,
                    "Shows your profile"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandRecycleDescription,
                    "Recycle items now"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandRestartDescription,
                    "Restart Bot"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandSnipeDescription,
                    "Perform snipe"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandStatusDescription,
                    "Shows bot runtime stats"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandTopDescription,
                    "Shows Top 'n' Pokemon (defaults to {0})"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandLocDescription,
                    "Shows Bot location"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandAccountsMsgHead,
                    ""),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandAllMsgHead,
                    "{0}'s Pokemon:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandExitMsgHead,
                    "Closing Bot... BYE BYE {0}!"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandHelpMsgHead,
                    "Help Command\nArguments in [] are optional\nArguments in <> are mandatory\n| means or"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandItemsMsgHead,
                    "{0}'s Inventory:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandLogsMsgHead,
                    "{0}'s last {1} log entries:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandPokedexMsgHead,
                    "{0}'s Pokedex:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandProfileMsgHead,
                    "{0}'s Profile:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandRecycleMsgHead,
                    "Recycling {0}'s items"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandRestartMsgHead,
                    "Restarting ... Current account is {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandSnipeMsgHead,
                    "Snipe accepted for user {0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandStatusMsgHead,
                    "{0}'s bot status:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandTopMsgHead,
                    "{0}'s top Pokemon:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandLocMsgHead,
                    "{0}'s location:"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandProfileMsgBody,
                    "Account: {0}\nLevel: {1}\nTotal XP: {2}\nXP until level up: {3}\nPokemon caught: {4}\nPokemon sent: {5}\nPokemon in bag: {6}\nPokemon evolved: {7}\nPokestops visited: {8}\nItems in bag: {9}\nStardust: {10}\nEggs hatched: {11}\nPokedex entries: {12}\nKM walked: {13:n0}"),
                new KeyValuePair<TranslationString, string>(TranslationString.TelegramCommandStatusMsgBody,
                    "Bot: Necrobot2 v{0}\nAccount: {1}\nRuntime: {2}\nLevel: {3}\nAdvance in: {4}h {5}m | {6} EP\nXP / h: {7:n0}\nPokemon / h: {8:n0}\nStardust / h: {9:n0}\nPokemon Sent: {10}\nPokemon Evolved: {11}\nRecycled: {12}\nPokestop limit: {13}\nCatch limit: {14}"),
            };

        [JsonProperty("PokemonStrings",
             ItemTypeNameHandling = TypeNameHandling.Arrays,
             ItemConverterType = typeof(KeyValuePairConverter),
             ObjectCreationHandling = ObjectCreationHandling.Replace,
             DefaultValueHandling = DefaultValueHandling.Populate)] private readonly
            List<KeyValuePair<PokemonId, string>> _pokemonTranslationStrings =
                new List<KeyValuePair<PokemonId, string>>()
                {
                    new KeyValuePair<PokemonId, string>((PokemonId) 001, "Bulbasaur"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 002, "Ivysaur"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 003, "Venusaur"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 004, "Charmander"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 005, "Charmeleon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 006, "Charizard"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 007, "Squirtle"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 008, "Wartortle"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 009, "Blastoise"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 010, "Caterpie"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 011, "Metapod"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 012, "Butterfree"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 013, "Weedle"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 014, "Kakuna"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 015, "Beedrill"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 016, "Pidgey"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 017, "Pidgeotto"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 018, "Pidgeot"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 019, "Rattata"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 020, "Raticate"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 021, "Spearow"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 022, "Fearow"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 023, "Ekans"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 024, "Arbok"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 025, "Pikachu"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 026, "Raichu"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 027, "Sandshrew"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 028, "Sandslash"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 029, "NidoranFemale"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 030, "Nidorina"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 031, "Nidoqueen"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 032, "NidoranMale"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 033, "Nidorino"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 034, "Nidoking"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 035, "Clefairy"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 036, "Clefable"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 037, "Vulpix"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 038, "Ninetales"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 039, "Jigglypuff"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 040, "Wigglytuff"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 041, "Zubat"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 042, "Golbat"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 043, "Oddish"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 044, "Gloom"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 045, "Vileplume"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 046, "Paras"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 047, "Parasect"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 048, "Venonat"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 049, "Venomoth"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 050, "Diglett"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 051, "Dugtrio"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 052, "Meowth"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 053, "Persian"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 054, "Psyduck"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 055, "Golduck"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 056, "Mankey"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 057, "Primeape"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 058, "Growlithe"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 059, "Arcanine"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 060, "Poliwag"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 061, "Poliwhirl"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 062, "Poliwrath"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 063, "Abra"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 064, "Kadabra"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 065, "Alakazam"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 066, "Machop"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 067, "Machoke"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 068, "Machamp"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 069, "Bellsprout"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 070, "Weepinbell"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 071, "Victreebel"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 072, "Tentacool"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 073, "Tentacruel"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 074, "Geodude"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 075, "Graveler"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 076, "Golem"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 077, "Ponyta"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 078, "Rapidash"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 079, "Slowpoke"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 080, "Slowbro"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 081, "Magnemite"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 082, "Magneton"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 083, "Farfetchd"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 084, "Doduo"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 085, "Dodrio"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 086, "Seel"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 087, "Dewgong"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 088, "Grimer"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 089, "Muk"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 090, "Shellder"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 091, "Cloyster"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 092, "Gastly"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 093, "Haunter"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 094, "Gengar"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 095, "Onix"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 096, "Drowzee"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 097, "Hypno"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 098, "Krabby"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 099, "Kingler"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 100, "Voltorb"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 101, "Electrode"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 102, "Exeggcute"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 103, "Exeggutor"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 104, "Cubone"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 105, "Marowak"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 106, "Hitmonlee"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 107, "Hitmonchan"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 108, "Lickitung"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 109, "Koffing"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 110, "Weezing"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 111, "Rhyhorn"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 112, "Rhydon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 113, "Chansey"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 114, "Tangela"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 115, "Kangaskhan"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 116, "Horsea"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 117, "Seadra"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 118, "Goldeen"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 119, "Seaking"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 120, "Staryu"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 121, "Starmie"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 122, "Mr. Mime"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 123, "Scyther"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 124, "Jynx"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 125, "Electabuzz"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 126, "Magmar"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 127, "Pinsir"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 128, "Tauros"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 129, "Magikarp"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 130, "Gyarados"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 131, "Lapras"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 132, "Ditto"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 133, "Eevee"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 134, "Vaporeon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 135, "Jolteon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 136, "Flareon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 137, "Porygon"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 138, "Omanyte"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 139, "Omastar"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 140, "Kabuto"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 141, "Kabutops"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 142, "Aerodactyl"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 143, "Snorlax"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 144, "Articuno"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 145, "Zapdos"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 146, "Moltres"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 147, "Dratini"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 148, "Dragonair"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 149, "Dragonite"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 150, "Mewtwo"),
                    new KeyValuePair<PokemonId, string>((PokemonId) 151, "Mew"),
                };

        [JsonProperty("PokemonMovesetStrings",
             ItemTypeNameHandling = TypeNameHandling.Arrays,
             ItemConverterType = typeof(KeyValuePairConverter),
             ObjectCreationHandling = ObjectCreationHandling.Replace,
             DefaultValueHandling = DefaultValueHandling.Populate)] private readonly
            List<KeyValuePair<PokemonMove, string>> _pokemonMovesetTranslationStrings =
                new List<KeyValuePair<PokemonMove, string>>()
                {
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MoveUnset, "MoveUnset"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ThunderShock, "ThunderShock"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.QuickAttack, "QuickAttack"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Scratch, "Scratch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Ember, "Ember"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.VineWhip, "VineWhip"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Tackle, "Tackle"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RazorLeaf, "RazorLeaf"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.TakeDown, "TakeDown"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WaterGun, "WaterGun"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Bite, "Bite"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Pound, "Pound"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DoubleSlap, "DoubleSlap"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Wrap, "Wrap"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HyperBeam, "HyperBeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Lick, "Lick"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DarkPulse, "DarkPulse"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Smog, "Smog"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Sludge, "Sludge"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MetalClaw, "MetalClaw"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ViceGrip, "ViceGrip"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FlameWheel, "FlameWheel"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Megahorn, "Megahorn"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WingAttack, "WingAttack"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Flamethrower, "Flamethrower"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SuckerPunch, "SuckerPunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Dig, "Dig"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.LowKick, "LowKick"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.CrossChop, "CrossChop"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PsychoCut, "PsychoCut"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Psybeam, "Psybeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Earthquake, "Earthquake"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.StoneEdge, "StoneEdge"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IcePunch, "IcePunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HeartStamp, "HeartStamp"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Discharge, "Discharge"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FlashCannon, "FlashCannon"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Peck, "Peck"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DrillPeck, "DrillPeck"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IceBeam, "IceBeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Blizzard, "Blizzard"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AirSlash, "AirSlash"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HeatWave, "HeatWave"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Twineedle, "Twineedle"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PoisonJab, "PoisonJab"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AerialAce, "AerialAce"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DrillRun, "DrillRun"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PetalBlizzard, "PetalBlizzard"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MegaDrain, "MegaDrain"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BugBuzz, "BugBuzz"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PoisonFang, "PoisonFang"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.NightSlash, "NightSlash"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Slash, "Slash"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BubbleBeam, "BubbleBeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Submission, "Submission"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.KarateChop, "KarateChop"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.LowSweep, "LowSweep"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AquaJet, "AquaJet"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AquaTail, "AquaTail"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SeedBomb, "SeedBomb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Psyshock, "Psyshock"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RockThrow, "RockThrow"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AncientPower, "AncientPower"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RockTomb, "RockTomb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RockSlide, "RockSlide"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PowerGem, "PowerGem"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ShadowSneak, "ShadowSneak"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ShadowPunch, "ShadowPunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ShadowClaw, "ShadowClaw"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.OminousWind, "OminousWind"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ShadowBall, "ShadowBall"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BulletPunch, "BulletPunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MagnetBomb, "MagnetBomb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SteelWing, "SteelWing"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IronHead, "IronHead"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ParabolicCharge, "ParabolicCharge"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Spark, "Spark"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ThunderPunch, "ThunderPunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Thunder, "Thunder"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Thunderbolt, "Thunderbolt"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Twister, "Twister"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DragonBreath, "DragonBreath"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DragonPulse, "DragonPulse"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DragonClaw, "DragonClaw"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DisarmingVoice, "DisarmingVoice"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DrainingKiss, "DrainingKiss"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DazzlingGleam, "DazzlingGleam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Moonblast, "Moonblast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PlayRough, "PlayRough"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.CrossPoison, "CrossPoison"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SludgeBomb, "SludgeBomb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SludgeWave, "SludgeWave"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.GunkShot, "GunkShot"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MudShot, "MudShot"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BoneClub, "BoneClub"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Bulldoze, "Bulldoze"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MudBomb, "MudBomb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FuryCutter, "FuryCutter"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BugBite, "BugBite"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SignalBeam, "SignalBeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.XScissor, "XScissor"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FlameCharge, "FlameCharge"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FlameBurst, "FlameBurst"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FireBlast, "FireBlast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Brine, "Brine"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WaterPulse, "WaterPulse"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Scald, "Scald"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HydroPump, "HydroPump"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Psychic, "Psychic"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Psystrike, "Psystrike"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IceShard, "IceShard"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IcyWind, "IcyWind"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FrostBreath, "FrostBreath"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Absorb, "Absorb"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.GigaDrain, "GigaDrain"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FirePunch, "FirePunch"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SolarBeam, "SolarBeam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.LeafBlade, "LeafBlade"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PowerWhip, "PowerWhip"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Splash, "Splash"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Acid, "Acid"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AirCutter, "AirCutter"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Hurricane, "Hurricane"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BrickBreak, "BrickBreak"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Cut, "Cut"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Swift, "Swift"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HornAttack, "HornAttack"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Stomp, "Stomp"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Headbutt, "Headbutt"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HyperFang, "HyperFang"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Slam, "Slam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BodySlam, "BodySlam"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Rest, "Rest"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.Struggle, "Struggle"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ScaldBlastoise, "ScaldBlastoise"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.HydroPumpBlastoise, "HydroPumpBlastoise"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WrapGreen, "WrapGreen"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WrapPink, "WrapPink"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FuryCutterFast, "FuryCutterFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BugBiteFast, "BugBiteFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BiteFast, "BiteFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SuckerPunchFast, "SuckerPunchFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.DragonBreathFast, "DragonBreathFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ThunderShockFast, "ThunderShockFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SparkFast, "SparkFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.LowKickFast, "LowKickFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.KarateChopFast, "KarateChopFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.EmberFast, "EmberFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WingAttackFast, "WingAttackFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PeckFast, "PeckFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.LickFast, "LickFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ShadowClawFast, "ShadowClawFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.VineWhipFast, "VineWhipFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RazorLeafFast, "RazorLeafFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MudShotFast, "MudShotFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.IceShardFast, "IceShardFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FrostBreathFast, "FrostBreathFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.QuickAttackFast, "QuickAttackFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ScratchFast, "ScratchFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.TackleFast, "TackleFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PoundFast, "PoundFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.CutFast, "CutFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PoisonJabFast, "PoisonJabFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.AcidFast, "AcidFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PsychoCutFast, "PsychoCutFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RockThrowFast, "RockThrowFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MetalClawFast, "MetalClawFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BulletPunchFast, "BulletPunchFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WaterGunFast, "WaterGunFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SplashFast, "SplashFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.WaterGunFastBlastoise, "WaterGunFastBlastoise"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.MudSlapFast, "MudSlapFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ZenHeadbuttFast, "ZenHeadbuttFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.ConfusionFast, "ConfusionFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.PoisonStingFast, "PoisonStingFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.BubbleFast, "BubbleFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FeintAttackFast, "FeintAttackFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.SteelWingFast, "SteelWingFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.FireFangFast, "FireFangFast"),
                    new KeyValuePair<PokemonMove, string>(PokemonMove.RockSmashFast, "RockSmashFast")
                };

        public string GetTranslation(TranslationString translationString, params object[] data)
        {
            var translation = _translationStrings.FirstOrDefault(t => t.Key.Equals(translationString)).Value;
            return translation != default(string)
                ? string.Format(translation, data)
                : $"Translation for {translationString} is missing";
        }

        public string GetTranslation(TranslationString translationString)
        {
            var translation = _translationStrings.FirstOrDefault(t => t.Key.Equals(translationString)).Value;
            return translation != default(string) ? translation : $"Translation for {translationString} is missing";
        }

        public string GetPokemonTranslation(PokemonId id)
        {
            var translation = _pokemonTranslationStrings.FirstOrDefault(t => t.Key.Equals(id)).Value;
            return translation != default(string) ? translation : $"Translation for pokemon {id} is missing";
        }

        public string GetPokemonMovesetTranslation(PokemonMove move)
        {
            var translation = _pokemonMovesetTranslationStrings.FirstOrDefault(t => t.Key.Equals(move)).Value;
            return translation != default(string) ? translation : $"Translation for move {move} is missing";
        }

        public static Translation Load(ILogicSettings logicSettings)
        {
            return Load(logicSettings, new Translation());
        }

        public static Translation Load(ILogicSettings logicSettings, Translation translations)
        {
            var translationsLanguageCode = logicSettings.TranslationLanguageCode;
            var translationPath = Path.Combine(logicSettings.GeneralConfigPath, "translations");
            var fullPath = Path.Combine(translationPath, "translation." + translationsLanguageCode + ".json");

            // Load existing translationsfiles except if using default English.
            // This file has to be rebuilt from default values to prevent an old/outdated
            // translation being used.
            if (File.Exists(fullPath) && translationsLanguageCode != "en")
            {
                var input = File.ReadAllText(fullPath);

                var jsonSettings = new JsonSerializerSettings();
                jsonSettings.Converters.Add(new StringEnumConverter {CamelCaseText = true});
                jsonSettings.ObjectCreationHandling = ObjectCreationHandling.Replace;
                jsonSettings.DefaultValueHandling = DefaultValueHandling.Populate;

                try
                {
                    translations = JsonConvert.DeserializeObject<Translation>(input, jsonSettings);
                    //TODO make json to fill default values as it won't do it now
                    new Translation()._translationStrings.Where(
                            item => translations._translationStrings.All(a => a.Key != item.Key))
                        .ToList()
                        .ForEach(translations._translationStrings.Add);
                    new Translation()._pokemonTranslationStrings.Where(
                            item => translations._pokemonTranslationStrings.All(a => a.Key != item.Key))
                        .ToList()
                        .ForEach(translations._pokemonTranslationStrings.Add);
                }
                catch (JsonException ex)
                {
                    Logger.Write($"[ERROR] Issue loading translations: {ex.ToString()}", LogLevel.Warning);
                    Logger.Write("[Request] Rebuild the translations folder? Y/N");

                    string strInput = Console.ReadLine().ToLower();

                    if (strInput.Equals("y"))
                    {
                        // Currently this section can only rebuild the EN translations file \\
                        // This is because default values cannot be supplied from other languages \\
                        Logger.Write("Loading fresh translations and continuing");
                        translations = new Translation();
                        translations.Save(Path.Combine(translationPath, "translation.en.json"));
                    }
                    else
                    {
                        ErrorHandler.ThrowFatalError("[ERROR] Fatal Error", 3, LogLevel.Error);
                        return null;
                    }
                }
            }
            else
            {
                translations = new Translation();
                translations.Save(Path.Combine(translationPath, "translation.en.json"));
            }

            return translations;
        }

        public void Save(string fullPath)
        {
            var output = JsonConvert.SerializeObject(this, Formatting.Indented,
                new StringEnumConverter {CamelCaseText = true});

            var folder = Path.GetDirectoryName(fullPath);
            if (folder != null && !Directory.Exists(folder))
            {
                Directory.CreateDirectory(folder);
            }

            File.WriteAllText(fullPath, output);
        }
    }
}